// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile{
  id String @id @default(uuid()) @map("_id")
  userId String @unique
  userName String 
  imageUrl String
  email String

  servers Server[]
  members Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Server {
  id String @id @default(uuid()) @map("_id")
  serverName String 
  imageUrl String
  inviteCode String @unique

  members Member[]
  channels Channel[]

  profileId String
  profile Profile @relation(fields: [profileId],references: [id], onDelete:Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}

enum MemberRole{
 
  LEADER
  COLEADER
  ELDER
  SPIDER

}

model Member{
  id String @id @default(uuid()) @map("_id")
  role MemberRole @default(SPIDER)

  profileId String
  profile Profile @relation(fields: [profileId],references: [id], onDelete:Cascade)

  serverId String
  server Server @relation(fields: [serverId] , references: [id], onDelete:Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}

enum ChannelType{
  TEXT
  AUDIO
  VIDEO
}

model Channel{
  id String @id @default(uuid()) @map("_id")
  channelName String
  type ChannelType @default(TEXT)

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  serverId String
  server Server @relation(fields: [serverId], references: [id], onDelete:Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([serverId])
  @@index([profileId])
}